public int rob(int[] nums) {
        if (nums == null || nums.length == 0) {
            return 0;
        }
        
        if (nums.length == 1) {
            return nums[0];
        }
        int[] dp = new int[nums.length];
        dp[0] = nums[0];
        dp[1] = Math.max(nums[0], nums[1]);
        
        for (int i = 2; i < nums.length; i++) {
            dp[i] = Math.max(nums[i] + dp[i - 2], dp[i - 1]);            
        }
        
        return dp[nums.length - 1];
    }
    
    //  follow up 2
    public int rob(int[] nums) {
        if (nums == null || nums.length == 0) {
            return 0;            
        }
        if (nums.length == 1) {
            return nums[0];
        }
        
        if (nums.length == 2) {
            return Math.max(nums[0], nums[1]);
        }
//         maintain two arrays. one ignores the last house, the other ignores the first house. Then compare both maximum amount of money
        int[] dp1 = new int[nums.length];
        int[] dp2 = new int[nums.length];
        
        dp1[0] = nums[0];
        dp1[1] = Math.max(nums[0], nums[1]);
        
        dp2[1] = nums[1];
        dp2[2] = Math.max(nums[1], nums[2]);
        
        for (int i = 2; i < nums.length - 1; i++) {
            dp1[i] = Math.max(nums[i] + dp1[i - 2], dp1[i - 1]);
            dp2[i + 1] = Math.max(nums[i + 1] + dp2[i - 1], dp2[i]);
        }
        return Math.max(dp1[nums.length - 2], dp2[nums.length - 1]);
    }
